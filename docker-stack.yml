version: '3.7'

services:

  mongo:
    image: mongo
    ports: 
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - proxy-net
    deploy:
      labels:
        traefik.backend: "front"
        traefik.port: "27017"
        traefik.frontend.rule: "PathPrefix:/"
        traefik.docker.network: "proxy-net"
      restart_policy: 
        condition: on-failure
    
  reverse-proxy:
    image: traefik
    command: --api --docker --docker.swarmMode
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - proxy-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        traefik.docker.network: "proxy-net"

  api:
    read_only: true
    image: christerence/blabber-api
    volumes:
      - .:/app
    depends_on:
      - mongo
    networks:
      - proxy-net
    working_dir: /usr/src/app
    command: "npm run start"
    ports:
      - "3000:3000"
    deploy:
      replicas: 2
      labels:
        traefik.backend: "api"
        traefik.frontend.rule: "PathPrefix:/api"
        traefik.port: "3000"
        traefik.frontend.rule: "PathPrefixStrip:/api"
        traefik.docker.network: "proxy-net"
      restart_policy:
        condition: on-failure

  front:
    image: vtcs2304s19/blabber-client
    networks:
      - proxy-net
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        traefik.backend: "front"
        traefik.port: "80"
        traefik.frontend.rule: "PathPrefix:/"
        traefik.docker.network: "proxy-net"


  visualizer:
    image: mikesir87/swarm-viz
    ports:
      - "5000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

volumes:
 mongo-data:


networks:
  proxy-net:
    name: "proxy-net"
    driver: overlay